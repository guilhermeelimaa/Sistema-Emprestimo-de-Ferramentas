package visao;

import DAO.AmigoDAO;
import DAO.FerramentaDAO;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.Emprestimo;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import modelo.Ferramenta;

public class CadastroEmprestimo extends javax.swing.JFrame {

    private Emprestimo objetoemprestimo;
    private AmigoDAO amigoDAO;
    private FerramentaDAO ferramentaDAO;

    /**
     * Cria uma nova instância de CadastroEmprestimo.
     */
    public CadastroEmprestimo() {
        initComponents();
        this.objetoemprestimo = new Emprestimo();
        setTitle("Cadastrar Empréstimos");
        this.amigoDAO = new AmigoDAO();
        this.ferramentaDAO = new FerramentaDAO();
        carregarFerramentas();
        setDataAquisicaoAtual();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JBCancelar = new javax.swing.JButton();
        JBCadastrar = new javax.swing.JButton();
        JTFAmigo = new javax.swing.JTextField();
        JCBFerramenta = new javax.swing.JComboBox<>();
        JTFDataAquisicao = new javax.swing.JTextField();
        JTFDataEntrega = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Amigo:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Ferramenta:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Data Aquisição:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Data Entrega:");

        JBCancelar.setText("Voltar");
        JBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCancelarActionPerformed(evt);
            }
        });

        JBCadastrar.setText("Cadastrar");
        JBCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCadastrarActionPerformed(evt);
            }
        });

        JCBFerramenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JBCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JBCadastrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(JTFDataEntrega))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JTFAmigo)
                                    .addComponent(JCBFerramenta, 0, 137, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(JTFDataAquisicao)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(JTFAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCBFerramenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFDataAquisicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(JTFDataEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBCadastrar)
                    .addComponent(JBCancelar))
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void JBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCancelarActionPerformed

        /**
         * Fecha a janela atual e retorna ao MenuPrincipal
         */
        dispose();
        MenuPrincipal objetotela = new MenuPrincipal();
        /**
         * Torna a janela visível
         */
        objetotela.setVisible(true);
    }//GEN-LAST:event_JBCancelarActionPerformed

    private void JBCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCadastrarActionPerformed
        // TODO add your handling code here:
        try {
            int id = 0;
            String amigo = "";
            String ferramentaNome = "";
            String dataaquisicao = "";
            String dataentrega = "";

            if (this.JTFAmigo.getText().length() < 2) {
                throw new Mensagens("Nome do amigo deve conter ao menos 2 caracteres.");
            } else {
                amigo = this.JTFAmigo.getText();
            }

            ferramentaNome = (String) JCBFerramenta.getSelectedItem();

            if (!amigoDAO.amigoExiste(amigo)) {
                throw new Mensagens("O amigo informado não está cadastrado no banco de dados.");
            }

            dataaquisicao = this.JTFDataAquisicao.getText();

            if (this.JTFDataEntrega.getText().length() < 8) {
                throw new Mensagens("Data de entrega deve conter ao menos 8 caracteres.");
            } else {
                dataentrega = this.JTFDataEntrega.getText();
            }

            /**
             * Busca a ferramenta pelo nome
             */
            Ferramenta ferramenta = ferramentaDAO.buscarFerramentaPorNome(ferramentaNome);

            /**
             * Verifica se a ferramenta foi encontrada
             */
            if (ferramenta == null) {
                throw new Mensagens("A ferramenta selecionada não foi encontrada no banco de dados.");
            }

            /**
             * Verifica se há pelo menos uma unidade da ferramenta disponível
             */
            if (ferramenta.getQuantidade() <= 0) {
                throw new Mensagens("Não há unidades disponíveis da ferramenta selecionada.");
            }

            /**
             * Atualiza a quantidade da ferramenta, subtraindo uma unidade
             */
            ferramenta.setQuantidade(ferramenta.getQuantidade() - 1);
            ferramentaDAO.atualizarQuantidadeFerramenta(ferramenta);

            /**
             * Insere o empréstimo no banco de dados
             */
            if (this.objetoemprestimo.InsertEmprestimoBD(id, amigo, ferramentaNome, dataaquisicao, dataentrega)) {
                JOptionPane.showMessageDialog(rootPane, "Empréstimo cadastrado com sucesso!");

                this.JTFAmigo.setText("");
                this.JTFDataAquisicao.setText("");
                this.JTFDataEntrega.setText("");

                /**
                 * Atualiza o ComboBox de ferramentas
                 */
                carregarFerramentas();
            }

            System.out.println(this.objetoemprestimo.getMinhaLista().toString());
        } catch (Mensagens erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException erro2) {
            JOptionPane.showMessageDialog(null, "Informe um número válido.");

        } catch (SQLException ex) {
            Logger.getLogger(CadastroEmprestimo.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_JBCadastrarActionPerformed
    private void carregarFerramentas() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(ferramentaDAO.listarNomesFerramentas().toArray(new String[0]));
        JCBFerramenta.setModel(model);
    }

    /**
     * Método para definir a data de aquisição como a data atual
     */
    private void setDataAquisicaoAtual() {
        LocalDate dataAtual = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        JTFDataAquisicao.setText(dataAtual.format(formatter));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroEmprestimo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroEmprestimo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroEmprestimo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroEmprestimo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroEmprestimo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBCadastrar;
    private javax.swing.JButton JBCancelar;
    private javax.swing.JComboBox<String> JCBFerramenta;
    private javax.swing.JTextField JTFAmigo;
    private javax.swing.JTextField JTFDataAquisicao;
    private javax.swing.JTextField JTFDataEntrega;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
